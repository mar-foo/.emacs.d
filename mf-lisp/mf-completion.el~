;;; mf-completion.el --- Configuration for the completion framework -*- lexical-binding: t -*-
;;; Code:
(progn
  (unless
      (package-installed-p 'prescient)
    (package-install 'prescient))
  (unless
      (fboundp 'prescient-persistent-mode)
    '(progn
       (autoload #'prescient-persistent-mode "prescient" nil nil)
       (add-hook 'minibuffer-inactive-mode-hook 'prescient-persistent-mode))))

(progn
  (unless
      (package-installed-p 'prescient)
    (package-install 'marginalia)
    (require 'marginalia)
    (marginalia-mode)))

(progn
  (unless
      (package-installed-p 'corfu)
    (package-install 'corfu)
    (require 'corfu)
    (corfu-global-mode)))

(setq tab-always-indent 'complete)
(autoload 'ffap-file-at-point "ffap")
(defun complete-path-at-point+ ()
  "Return completion data for UNIX path at point."
  (let ((fn (ffap-file-at-point))
        (fap (thing-at-point 'filename)))
    (when (and (or fn (equal "/" fap))
               (save-excursion
                 (search-backward fap (line-beginning-position) t)))
      (list (match-beginning 0)
            (match-end 0)
            #'completion-file-name-table :exclusive 'no))))
(add-hook 'completion-at-point-functions
          #'complete-path-at-point+
          'append)
(icomplete-mode 1)

;;; mf-completion.el ends here
